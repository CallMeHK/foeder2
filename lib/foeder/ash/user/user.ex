defmodule Foeder.Ash.User do
  # This turns this module into a resource
  use Ash.Resource,
    data_layer: AshPostgres.DataLayer

  postgres do
    table "users"
    repo Foeder.Repo
  end

  code_interface do
    define_for Foeder.Ash

    define :read
    define :by_id, args: [:id]
  end

  actions do
    # Add a set of simple actions. You'll customize these later.
    defaults [:create, :read, :update, :destroy]


    read :by_id do
      argument :id, :integer do
        allow_nil? false
      end

      filter expr(id == ^arg(:id))
    end
  end

  # Attributes are the simple pieces of data that exist on your resource
  attributes do
    # Add an autogenerated UUID primary key called `:id`.
    attribute :id, :integer do
      primary_key? true
      allow_nil? false
    end

    attribute :email, :string do
      allow_nil? false
    end
  end

  relationships do
    # belongs_to means that the destination attribute is unique, meaning only one related record could exist.
    # We assume that the destination attribute is `representative_id` based
    # on the name of this relationship and that the source attribute is `representative_id`.
    # We create `representative_id` automatically.
    has_many :todo, Foeder.Ash.Todos
  end
end

